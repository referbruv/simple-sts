@model LoginViewModel

@{
    bool isSocialLoginsAvailable = Model.VisibleExternalProviders.Any();
    bool isEmailLoginEnabled = Model.EnableLocalLogin;
}

<div class="login-page shadow">
    <partial name="_ValidationSummary" />
    <div class="row">
        <div class="col-md-6 bg-secondary"></div>
        <div class="col-md-6 p-4 rounded-0">
            <div class="lead text-center">
                <h1>Login</h1>
                <p>Choose how to login</p>
            </div>
            <div class="col-md-12">
                <div class="card border-0">
                    @if (isSocialLoginsAvailable)
                    {
                        <div class="card-body py-0">
                            <ul class="list-inline text-center">
                                @foreach (var provider in Model.VisibleExternalProviders)
                                {
                                    <li class="text-center list-inline-item border-0">
                                        <a class="btn btn-block @(provider.ButtonStyle)"
                                        asp-controller="External"
                                        asp-action="Challenge"
                                        asp-route-scheme="@provider.AuthenticationScheme"
                                        asp-route-returnUrl="@Model.ReturnUrl">
                                            @provider.DisplayName
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    @if (isEmailLoginEnabled)
                    {
                        <div class="card-body">
                            <form asp-route="Login">
                                <input type="hidden" asp-for="ReturnUrl" />

                                <div class="form-group">
                                    <label asp-for="Username"></label>
                                    <input class="form-control" placeholder="Username" asp-for="Username" autofocus>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Password"></label>
                                    <input type="password" class="form-control" placeholder="Password" asp-for="Password" autocomplete="off">
                                </div>
                                @if (Model.AllowRememberLogin)
                                {
                                    <div class="form-group">
                                        <div class="form-check">
                                            <input class="form-check-input" asp-for="RememberLogin">
                                            <label class="form-check-label" asp-for="RememberLogin">
                                                Remember My Login
                                            </label>
                                        </div>
                                    </div>
                                }
                                <button class="btn btn-primary" name="button" value="login">Login</button>
                                <button class="btn btn-secondary" name="button" value="cancel">Cancel</button>
                            </form>
                        </div>
                    }
                </div>
            </div>

            @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
            {
                <div class="alert alert-warning">
                    <strong>Invalid login request</strong>
                    There are no login schemes configured for this request.
                </div>
            }
        </div>
    </div>
</div>